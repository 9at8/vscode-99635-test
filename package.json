{
	"name": "object-settings",
	"displayName": "Object Settings",
	"description": "Test object settings from the GUI",
	"version": "0.0.1",
	"engines": {
		"vscode": "^1.46.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:object-settings.helloWorld"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "object-settings.helloWorld",
				"title": "Hello World"
			}
		],
		"configuration": {
			"properties": {
				"object-settings.staticObject": {
					"type": "object",
					"description": "Once you add all possible keys, the add button should disappear. Properties that have a default should not be deletable.",
					"default": {
						"aString": "I am a string"
					},
					"properties": {
						"aString": {
							"type": "string",
							"description": "String property."
						},
						"anEnum": {
							"type": "string",
							"description": "Enum property",
							"enum": ["A", "B", "C"],
							"enumDescriptions": [
								"A description.",
								"B description",
								"C description."
							],
							"default": "B"
						},
						"aBoolean": {
							"type": "boolean",
							"description": "Boolean property."
						}
					}
				},
				"object-settings.dynamicObject": {
					"type": "object",
					"description": "Keys matching '/st+r/' will have string values, '/enu+m/' will have enum values. Everything should will be a boolean.",
					"patternProperties": {
						"st+r": {
							"type": "string",
							"description": "String property."
						},
						"enu+m": {
							"type": "string",
							"description": "Enum property",
							"enum": ["none", "information", "warn", "error"]
						}
					},
					"additionalProperties": {
						"type": "boolean",
						"description": "Boolean property"
					}
				},
				"object-settings.allBooleansDontWork1": {
					"type": "object",
					"additionalProperties": {
						"type": "boolean",
						"description": "Boolean property"
					}
				},
				"object-settings.allBooleansDontWork2": {
					"type": "object",
					"properties": {
						"hello": {
							"type": "boolean",
							"description": "Boolean property"
						}
					},
					"additionalProperties": {
						"type": "boolean",
						"description": "Boolean property"
					}
				},
				"object-settings.additionalPropertiesTrueDoesNotWork": {
					"type": "object",
					"description": "If additional properties is true, items of any type can be added to it. Object render should not work.",
					"additionalProperties": true
				},
				"object-settings.emptyObjectsDontWork": {
					"type": "object",
					"description": "This has no properties and nothing can be added to it. So object renderer should not render this.",
					"additionalProperties": false
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/vscode": "^1.46.0",
		"@types/glob": "^7.1.1",
		"@types/mocha": "^7.0.2",
		"@types/node": "^13.11.0",
		"eslint": "^6.8.0",
		"@typescript-eslint/parser": "^2.30.0",
		"@typescript-eslint/eslint-plugin": "^2.30.0",
		"glob": "^7.1.6",
		"mocha": "^10.2.0",
		"typescript": "^3.8.3",
		"vscode-test": "^1.3.0"
	}
}
